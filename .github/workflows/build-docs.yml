name: Build Documentation

on:
  push:
    branches:
      - main
      - develop
      - release/*
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
          sudo apt-get install graphviz
      - name: Build docs
        run: |
          cd docs
          make html
          cd ..
          cp docs/source/versions.json docs/build/html/versions.json
      - name: Pre-deploy
        id: prep
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          RELEASE: ${{ github.event_name == 'release' && github.event.action == 'published' }}
          VERSION: ${{ github.event.release.tag_name }}

        run: |
          if [[ $RELEASE ]]; then
            DOCNAME="${VERSION##*v}"
          elif [[ $BRANCH_NAME =~ "release" ]]; then
            VERSION="${BRANCH_NAME##*/}"
            DOCNAME="${VERSION}"
          elif [[ $BRANCH_NAME == "develop" ]]; then
            DOCNAME="develop"
          elif [[ $BRANCH_NAME == "main" ]]; then
            DOCNAME="latest"
          else
            DOCNAME="${BRANCH_NAME}"
            echo "Not sure how to handle $BRANCH_NAME"
            exit 1
          fi
          echo "Using $DOCNAME"
          echo "DOCNAME=$DOCNAME" >> $GITHUB_OUTPUT


      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
          publish_branch: gh-pages
          destination_dir: ./${{ steps.prep.outputs.DOCNAME }} 
          keep_files: true
          force_orphan: true
      - name: Copy versions.json
        run: |
          git fetch
          git checkout gh-pages
          cp ${{ steps.prep.outputs.DOCNAME }}/versions.json versions.json
          if [[ -z $(git status --porcelain) ]]; then
            echo "No changes"
          else
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git add versions.json
            git commit -m "Update versions.json"
            git push origin gh-pages
          fi