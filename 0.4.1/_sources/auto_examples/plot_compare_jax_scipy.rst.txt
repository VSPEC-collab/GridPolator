
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_compare_jax_scipy.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_compare_jax_scipy.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_compare_jax_scipy.py:


Compare `JAX` and `Scipy`
=========================

This example compares the `JAX` and `Scipy` implementations of the
interpolation backend.

.. GENERATED FROM PYTHON SOURCE LINES 9-18

.. code-block:: Python


    import jax.numpy as jnp
    import numpy as np
    from time import time
    import matplotlib.pyplot as plt
    from astropy import units as u

    from GridPolator import GridSpectra








.. GENERATED FROM PYTHON SOURCE LINES 19-21

First let's get the spectra
-----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 21-47

.. code-block:: Python


    w1 = 5 * u.um
    w2 = 12 * u.um
    resolving_power = 100
    teffs = [2800,2900,3000,3100,3200,3300]
    impl_bin = 'rust'

    g_jax = GridSpectra.from_vspec(
        w1=w1,
        w2=w2,
        resolving_power=resolving_power,
        teffs=teffs,
        impl_bin=impl_bin,
        impl_interp='jax',
        fail_on_missing=False
    )
    g_scipy = GridSpectra.from_vspec(
        w1=w1,
        w2=w2,
        resolving_power=resolving_power,
        teffs=teffs,
        impl_bin=impl_bin,
        impl_interp='scipy',
        fail_on_missing=False
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading Spectra:   0%|          | 0/6 [00:00<?, ?it/s]PHOENIX grid for 2800 not found. Downloading...

    Downloading teff=2800:   0%|          | 0.00/33.9M [00:00<?, ?B/s]
    Downloading teff=2800:   0%|          | 4.10k/33.9M [00:00<58:36, 9.64kB/s]
    Downloading teff=2800:   0%|          | 49.2k/33.9M [00:00<05:12, 108kB/s] 
    Downloading teff=2800:   0%|          | 115k/33.9M [00:00<02:31, 224kB/s] 
    Downloading teff=2800:   1%|          | 422k/33.9M [00:00<00:40, 827kB/s]
    Downloading teff=2800:   3%|▎         | 1.06M/33.9M [00:00<00:16, 1.99MB/s]
    Downloading teff=2800:  10%|█         | 3.43M/33.9M [00:01<00:04, 7.20MB/s]
    Downloading teff=2800:  18%|█▊        | 6.20M/33.9M [00:01<00:02, 11.3MB/s]
    Downloading teff=2800:  29%|██▉       | 9.86M/33.9M [00:01<00:01, 16.3MB/s]
    Downloading teff=2800:  39%|███▉      | 13.3M/33.9M [00:01<00:00, 20.8MB/s]
    Downloading teff=2800:  50%|████▉     | 16.8M/33.9M [00:01<00:00, 22.2MB/s]
    Downloading teff=2800:  62%|██████▏   | 20.9M/33.9M [00:01<00:00, 27.0MB/s]
    Downloading teff=2800:  70%|███████   | 23.9M/33.9M [00:01<00:00, 25.7MB/s]
    Downloading teff=2800:  82%|████████▏ | 27.8M/33.9M [00:01<00:00, 26.4MB/s]
    Downloading teff=2800:  94%|█████████▍| 32.0M/33.9M [00:02<00:00, 30.3MB/s]    Downloading teff=2800: 100%|██████████| 33.9M/33.9M [00:02<00:00, 15.7MB/s]
    Loading Spectra:  17%|█▋        | 1/6 [00:02<00:14,  2.85s/it]PHOENIX grid for 2900 not found. Downloading...

    Downloading teff=2900:   0%|          | 0.00/33.8M [00:00<?, ?B/s]
    Downloading teff=2900:   0%|          | 4.10k/33.8M [00:00<1:09:23, 8.13kB/s]
    Downloading teff=2900:   0%|          | 49.2k/33.8M [00:00<06:19, 88.9kB/s]  
    Downloading teff=2900:   1%|          | 242k/33.8M [00:00<01:16, 442kB/s]  
    Downloading teff=2900:   2%|▏         | 516k/33.8M [00:00<00:38, 861kB/s]
    Downloading teff=2900:   6%|▌         | 2.06M/33.8M [00:01<00:08, 3.79MB/s]
    Downloading teff=2900:  13%|█▎        | 4.36M/33.8M [00:01<00:03, 7.41MB/s]
    Downloading teff=2900:  25%|██▍       | 8.33M/33.8M [00:01<00:01, 14.8MB/s]
    Downloading teff=2900:  35%|███▍      | 11.8M/33.8M [00:01<00:01, 18.3MB/s]
    Downloading teff=2900:  46%|████▌     | 15.5M/33.8M [00:01<00:00, 20.8MB/s]
    Downloading teff=2900:  57%|█████▋    | 19.3M/33.8M [00:01<00:00, 25.0MB/s]
    Downloading teff=2900:  69%|██████▊   | 23.2M/33.8M [00:01<00:00, 26.6MB/s]
    Downloading teff=2900:  80%|███████▉  | 27.0M/33.8M [00:01<00:00, 29.4MB/s]
    Downloading teff=2900:  89%|████████▉ | 30.1M/33.8M [00:02<00:00, 27.0MB/s]
    Downloading teff=2900: 100%|█████████▉| 33.7M/33.8M [00:02<00:00, 29.3MB/s]    Downloading teff=2900: 100%|██████████| 33.8M/33.8M [00:02<00:00, 15.5MB/s]
    Loading Spectra:  33%|███▎      | 2/6 [00:05<00:11,  2.84s/it]    Loading Spectra:  50%|█████     | 3/6 [00:05<00:05,  1.68s/it]    Loading Spectra:  67%|██████▋   | 4/6 [00:06<00:02,  1.14s/it]    Loading Spectra:  83%|████████▎ | 5/6 [00:06<00:00,  1.19it/s]PHOENIX grid for 3300 not found. Downloading...

    Downloading teff=3300:   0%|          | 0.00/33.6M [00:00<?, ?B/s]
    Downloading teff=3300:   0%|          | 4.10k/33.6M [00:00<1:00:58, 9.17kB/s]
    Downloading teff=3300:   0%|          | 45.1k/33.6M [00:00<06:05, 91.7kB/s]  
    Downloading teff=3300:   0%|          | 131k/33.6M [00:00<02:08, 261kB/s]  
    Downloading teff=3300:   2%|▏         | 520k/33.6M [00:00<00:33, 985kB/s]
    Downloading teff=3300:   3%|▎         | 1.16M/33.6M [00:01<00:14, 2.16MB/s]
    Downloading teff=3300:  11%|█         | 3.62M/33.6M [00:01<00:03, 7.60MB/s]
    Downloading teff=3300:  20%|██        | 6.75M/33.6M [00:01<00:02, 11.9MB/s]
    Downloading teff=3300:  31%|███       | 10.4M/33.6M [00:01<00:01, 17.3MB/s]
    Downloading teff=3300:  43%|████▎     | 14.3M/33.6M [00:01<00:00, 22.7MB/s]
    Downloading teff=3300:  52%|█████▏    | 17.6M/33.6M [00:01<00:00, 22.1MB/s]
    Downloading teff=3300:  65%|██████▍   | 21.7M/33.6M [00:01<00:00, 26.0MB/s]
    Downloading teff=3300:  78%|███████▊  | 26.1M/33.6M [00:01<00:00, 30.4MB/s]
    Downloading teff=3300:  88%|████████▊ | 29.6M/33.6M [00:02<00:00, 27.5MB/s]
    Downloading teff=3300: 100%|█████████▉| 33.5M/33.6M [00:02<00:00, 30.4MB/s]    Downloading teff=3300: 100%|██████████| 33.6M/33.6M [00:02<00:00, 15.8MB/s]
    Loading Spectra: 100%|██████████| 6/6 [00:09<00:00,  1.50s/it]    Loading Spectra: 100%|██████████| 6/6 [00:09<00:00,  1.56s/it]
    Loading Spectra:   0%|          | 0/6 [00:00<?, ?it/s]    Loading Spectra:  17%|█▋        | 1/6 [00:00<00:01,  3.30it/s]    Loading Spectra:  33%|███▎      | 2/6 [00:00<00:01,  3.30it/s]    Loading Spectra:  50%|█████     | 3/6 [00:00<00:00,  3.30it/s]    Loading Spectra:  67%|██████▋   | 4/6 [00:01<00:00,  3.31it/s]    Loading Spectra:  83%|████████▎ | 5/6 [00:01<00:00,  3.30it/s]    Loading Spectra: 100%|██████████| 6/6 [00:01<00:00,  3.30it/s]    Loading Spectra: 100%|██████████| 6/6 [00:01<00:00,  3.30it/s]




.. GENERATED FROM PYTHON SOURCE LINES 48-50

Evaluate a single spectrum
---------------------------

.. GENERATED FROM PYTHON SOURCE LINES 50-66

.. code-block:: Python


    wl_jnp = jnp.linspace(5.0, 11.2, 100)
    wl_np = np.linspace(5.0, 11.2, 100)
    params_jnp = (jnp.array([2900.]),)
    params_np = (np.array([2900.]),)

    start = time()
    flux_jnp = g_jax.evaluate(params_jnp, wl_jnp)
    end = time()
    print(f'JAX took {end - start} seconds')

    start = time()
    flux_np = g_scipy.evaluate(params_np, wl_np)
    end = time()
    print(f'Scipy took {end - start} seconds')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    JAX took 4.619856834411621 seconds
    Scipy took 0.00490570068359375 seconds




.. GENERATED FROM PYTHON SOURCE LINES 67-69

Now do 1000 of each
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-83

.. code-block:: Python


    N = 1000
    start = time()
    for _ in range(N):
        flux_jnp = g_jax.evaluate(params_jnp, wl_jnp)
    end = time()
    print(f'JAX took {end - start} seconds\n\tthat\'s {(end - start) / 1000} seconds per call')

    start = time()
    for _ in range(N):
        flux_np = g_scipy.evaluate(params_np, wl_np)
    end = time()
    print (f'Scipy took {end - start} seconds\n\tthat\'s {(end - start) / 1000} seconds per call')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    JAX took 0.345200777053833 seconds
            that's 0.000345200777053833 seconds per call
    Scipy took 4.487357139587402 seconds
            that's 0.004487357139587402 seconds per call




.. GENERATED FROM PYTHON SOURCE LINES 84-89

QED
---

The takeaway: The first JAX call is expensive, the rest are cheap. For Scipy everything costs the same.
Of course, the costs change depending on the complexity of the grid.

.. GENERATED FROM PYTHON SOURCE LINES 89-137

.. code-block:: Python


    fig, ax  = plt.subplots(1,1,figsize=(4,3))

    N=3000

    g_jax = GridSpectra.from_vspec(
        w1=w1,
        w2=w2,
        resolving_power=resolving_power,
        teffs=teffs,
        impl_bin=impl_bin,
        impl_interp='jax',
        fail_on_missing=False
    )
    g_scipy = GridSpectra.from_vspec(
        w1=w1,
        w2=w2,
        resolving_power=resolving_power,
        teffs=teffs,
        impl_bin=impl_bin,
        impl_interp='scipy',
        fail_on_missing=False
    )

    dt_jax = np.zeros(N)

    for i in range(N):
        start = time()
        flux_jnp = g_jax.evaluate(params_jnp, wl_jnp)
        end = time()
        dt_jax[i] = end - start

    dt_scipy = np.zeros(N)

    for i in range(N):
        start = time()
        flux_np = g_scipy.evaluate(params_np, wl_np)
        end = time()
        dt_scipy[i] = end - start

    x = np.arange(N)

    ax.plot(x, np.cumsum(dt_jax), label='JAX',c='#B96EBD')
    ax.plot(x, np.cumsum(dt_scipy), label='Scipy',c='#0054A6')
    ax.set_xlabel('Iteration')
    ax.set_ylabel('Time (s)')
    fig.tight_layout()
    _=ax.legend()



.. image-sg:: /auto_examples/images/sphx_glr_plot_compare_jax_scipy_001.png
   :alt: plot compare jax scipy
   :srcset: /auto_examples/images/sphx_glr_plot_compare_jax_scipy_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Loading Spectra:   0%|          | 0/6 [00:00<?, ?it/s]    Loading Spectra:  17%|█▋        | 1/6 [00:00<00:01,  3.31it/s]    Loading Spectra:  33%|███▎      | 2/6 [00:00<00:01,  3.30it/s]    Loading Spectra:  50%|█████     | 3/6 [00:00<00:00,  3.30it/s]    Loading Spectra:  67%|██████▋   | 4/6 [00:01<00:00,  3.30it/s]    Loading Spectra:  83%|████████▎ | 5/6 [00:01<00:00,  3.30it/s]    Loading Spectra: 100%|██████████| 6/6 [00:01<00:00,  3.30it/s]    Loading Spectra: 100%|██████████| 6/6 [00:01<00:00,  3.30it/s]
    Loading Spectra:   0%|          | 0/6 [00:00<?, ?it/s]    Loading Spectra:  17%|█▋        | 1/6 [00:00<00:01,  3.29it/s]    Loading Spectra:  33%|███▎      | 2/6 [00:00<00:01,  3.30it/s]    Loading Spectra:  50%|█████     | 3/6 [00:00<00:00,  3.31it/s]    Loading Spectra:  67%|██████▋   | 4/6 [00:01<00:00,  3.30it/s]    Loading Spectra:  83%|████████▎ | 5/6 [00:01<00:00,  3.30it/s]    Loading Spectra: 100%|██████████| 6/6 [00:01<00:00,  3.30it/s]    Loading Spectra: 100%|██████████| 6/6 [00:01<00:00,  3.30it/s]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 43.624 seconds)


.. _sphx_glr_download_auto_examples_plot_compare_jax_scipy.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_compare_jax_scipy.ipynb <plot_compare_jax_scipy.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_compare_jax_scipy.py <plot_compare_jax_scipy.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
